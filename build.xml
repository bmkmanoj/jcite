<?xml version="1.0" encoding="UTF-8"?>
<project name="jcite" default="build" basedir=".">
	<description>Builds, tests, and runs the project JCite.</description>

	<property file="build.properties" />
	<property file="build.default.properties" />
	
	<property name="Name" value="JCite" />
	<property name="name" value="jcite" />

	<property name="dist.version" value="1.9" />
	
	<property name="src.dir" location="${basedir}/src" />
	<property name="lib.dir" location="${basedir}/lib" />
	<property name="doc.dir" location="${basedir}/doc" />
	<property name="src.classes.dir" location="${src.dir}/classes" />
	<property name="src.excel.dir" location="${src.dir}/classes-excel" />
	<property name="src.test.dir" location="${src.dir}/test" />
	<property name="src.examples.dir" location="${src.dir}/examples" />
	<property name="src.doc.dir" location="${src.dir}/doc" />

	<!-- Targets -->

	<property name="javac.source" value="1.5" />
	<property name="javac.target" value="1.5" />

	<property name="build.dir" location="${basedir}/build" />
	<property name="build.classes.dir" location="${build.dir}/classes" />
	<property name="build.excel.dir" location="${build.dir}/excel" />
	<property name="build.test.dir" location="${build.dir}/test" />
	<property name="build.examples.dir" location="${build.dir}/examples" />
	<property name="build.doc.dir" location="${build.dir}/doc" />
	<property name="dist.dir" location="${basedir}/dist" />

	<property name="jar.file" location="${build.dir}/${name}.jar" />
	<property name="jar.manifest" location="${src.classes.dir}/manifest.mf" />

	<property name="jar.excel.file" location="${build.dir}/${name}-excel.jar" />
	<property name="jar.excel.manifest" location="${src.excel.dir}/manifest.mf" />

	<property name="javadoc.dir" location="${doc.dir}/javadoc" />
	<property name="javadoc.packages" value="ch.arrenbrecht.jcite.*" />

	<property name="run.mainclass" value="ch.arrenbrecht.jcite.JCite" />
	<property name="run.args" value="" />


	<!-- ================================================================= -->
	<!-- prepare:                                                          -->
	<!-- Sets up directories and such for compilation                      -->
	<!-- ================================================================= -->

	<target name="prepare">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${build.classes.dir}" />
		<mkdir dir="${build.excel.dir}" />
		<mkdir dir="${build.test.dir}" />
		<mkdir dir="${build.examples.dir}" />
		<mkdir dir="${build.doc.dir}" />

		<path id="build.classpath">
			<fileset dir="${lib.dir}" includes="**/*.jar" />
		</path>
		<property name="build.classpath" refid="build.classpath" />

		<available file="${lib.dir}/jxl.jar" property="jxl.exists" />

		<tstamp>
			<format property="timestamp" pattern="yyyy/MM/dd HH:mm:ss z" locale="en" />
		</tstamp>
		<property name="dist.version.long" value="${dist.version} [${timestamp}]" />
	</target>

	<target name="prepare-run" depends="prepare, jar">

		<path id="run.classpath">
			<fileset dir="${build.dir}" includes="*.jar" />
			<fileset dir="${lib.dir}" includes="**/*.jar" />
		</path>
		<property name="run.classpath" refid="run.classpath" />

		<path id="test.classpath">
			<pathelement location="${build.examples.dir}" />
			<pathelement location="${build.test.dir}" />
			<path refid="run.classpath" />
		</path>
		<property name="test.classpath" refid="test.classpath" />

	</target>


	<!-- ================================================================= -->
	<!-- compile:                                                          -->
	<!-- Compiles the source code                                          -->
	<!-- ================================================================= -->

	<target name="compile-main" depends="prepare" description="Compiles the source code">
		<javac srcdir="${src.classes.dir}" destdir="${build.classes.dir}" classpath="${build.classpath}" debug="false" deprecation="on" source="${javac.source}" target="${javac.target}">
			<include name="ch/arrenbrecht/**" />
		</javac>
	</target>

	<target name="compile-excel" depends="prepare, compile-main" description="Compiles the source code" if="jxl.exists">
		<path id="excel.classpath">
			<pathelement location="${build.classes.dir}" />
			<path refid="build.classpath" />
		</path>
		<property name="excel.classpath" refid="excel.classpath" />
		<javac srcdir="${src.excel.dir}" destdir="${build.excel.dir}" classpath="${excel.classpath}" debug="false" deprecation="on" source="${javac.source}" target="${javac.target}">
			<include name="ch/arrenbrecht/**" />
		</javac>
	</target>

	<target name="compile" depends="prepare, compile-main, compile-excel" description="Compiles the source code">
	</target>

	<target name="compile-examples" depends="prepare, compile" description="Compiles the examples">
		<javac srcdir="${src.examples.dir}" destdir="${build.examples.dir}" classpath="${build.classpath}" debug="true" deprecation="on" source="${javac.source}" target="${javac.target}">
			<include name="ch/arrenbrecht/jcite/**" />
		</javac>
	</target>

	<!-- ================================================================= -->
	<!-- build:                                                            -->
	<!-- The default target                                                -->
	<!-- ================================================================= -->

	<target name="build" depends="jar,compile-tests" description="Builds an executable target (default)">

	</target>

	<!-- ================================================================= -->
	<!-- jar:                                                              -->
	<!-- Creates jar file                                                  -->
	<!-- ================================================================= -->

	<target name="jar-main" depends="compile" description="Creates the main jar file">
		<delete file="${jar.file}" />
		<jar manifest="${jar.manifest}" jarfile="${jar.file}" compress="false">
			<fileset dir="${build.classes.dir}" />
		</jar>
	</target>

	<target name="jar-excel" depends="compile, jar-main" description="Creates the Excel jar file" if="jxl.exists">
		<delete file="${jar.excel.file}" />
		<jar manifest="${jar.excel.manifest}" jarfile="${jar.excel.file}" compress="false">
			<fileset dir="${build.excel.dir}" />
			<fileset dir="${src.excel.dir}">
				<include name="META-INF/services/**" />
			</fileset>
		</jar>
	</target>

	<target name="jar" depends="jar-main, jar-excel" description="Creates the jar files">
	</target>

	<!-- ================================================================= -->
	<!-- run:                                                              -->
	<!-- Runs the darn thing                                               -->
	<!-- ================================================================= -->

	<target name="run" depends="prepare-run, build" description="Runs the darn thing">

		<java classname="${run.mainclass}" fork="yes">
			<arg line="${run.args}" />
			<classpath refid="run.classpath" />
		</java>

	</target>

	<!-- ================================================================= -->
	<!-- javadoc:                                                          -->
	<!-- Generates javadoc                                                 -->
	<!-- ================================================================= -->

	<target name="javadoc" description="Builds javadoc" depends="prepare, doc, build">

		<property name="javadoc.title" value="${Name} API ${dist.version.long}" />
		<delete dir="${javadoc.dir}" />
		<mkdir dir="${javadoc.dir}" />
		<javadoc sourcepath="${src.examples.dir}" destdir="${javadoc.dir}" packagenames="${javadoc.packages}" public="true" windowtitle="${javadoc.title}" use="false" additionalParam="-tagletPath ${lib.dir}/java2html.jar;${lib.dir}/jxl.jar;${build.dir}/jcite.jar -taglet ch.arrenbrecht.jcite.JCiteTaglet -J-Djcitesourcepath=${src.test.dir}" stylesheetfile="${src.doc.dir}/plainstyle/style.css" overview="${src.examples.dir}/overview.html">
			<classpath refid="build.classpath" />
		</javadoc>
	</target>

	<!-- ================================================================= -->
	<!-- doc:                                                              -->
	<!-- Generates documentation                                           -->
	<!-- ================================================================= -->

	<target name="doc" description="Builds documentation" depends="prepare-run, compile">

		<delete dir="${doc.dir}" />
		<mkdir dir="${doc.dir}" />
		<copy todir="${doc.dir}">
			<fileset dir="${src.doc.dir}">
				<include name="**/*.gif" />
				<include name="**/*.jpeg" />
				<include name="**/*.jpg" />
				<include name="**/*.png" />
				<include name="**/*.pdf" />
				<include name="**/*.svg" />
				<include name="**/*.html" />
				<include name="**/*.css" />
			</fileset>
		</copy>

		<exec dir="${src.doc.dir}" executable="${rextile.launch}" vmlauncher="false" failonerror="true" >
		</exec>

		<java classname="ch.arrenbrecht.jcite.JCite" classpath="${run.classpath}" failonerror="yes">
			<arg value="-sp" />
			<arg path="${src.examples.dir}" />
			<arg value="-sp" />
			<arg path="${src.test.dir}" />
			<arg value="-sp" />
			<arg path="${src.test.dir}/data" />
			<arg value="-r" />
			<arg value="-i" />
			<arg file="${build.doc.dir}/*.htm*" />
			<arg value="-o" />
			<arg file="${doc.dir}" />
		</java>

	</target>

	<!-- ================================================================= -->
	<!-- test:                                                             -->
	<!-- Runs JUnit test suites                                            -->
	<!-- ================================================================= -->

	<target name="compile-tests" depends="prepare-run, jar, compile-examples">

		<mkdir dir="${build.test.dir}" />

		<javac srcdir="${src.test.dir}" destdir="${build.test.dir}" classpath="${test.classpath}" debug="true" deprecation="on" source="${javac.source}" target="${javac.target}">
			<include name="ch/arrenbrecht/jcite/**" />
		</javac>
	</target>

	<target name="test" depends="prepare-run, compile-tests, doc" description="Runs JUnit test suites">

		<taskdef name="junit" classname="org.apache.tools.ant.taskdefs.optional.junit.JUnitTask" classpath="${test.classpath}" />

		<junit printsummary="yes" showoutput="no" haltonerror="yes" haltonfailure="yes" fork="yes" dir="${basedir}">

			<formatter type="plain" usefile="no" />
			<classpath refid="test.classpath" />

			<batchtest>
				<fileset dir="${src.test.dir}">
					<include name="**/*Test.java" />
				</fileset>
			</batchtest>

		</junit>

	</target>

	<!-- ================================================================= -->
	<!-- clean:                                                            -->
	<!-- Removes all build files                                           -->
	<!-- ================================================================= -->

	<target name="clean" description="Removes all build files">
		<delete dir="${doc.dir}" />
		<delete dir="${build.dir}" />
		<delete dir="${dist.dir}" />
	</target>

	<!-- ================================================================= -->
	<!-- style:                                                            -->
	<!-- Runs checkstyle                                                   -->
	<!-- ================================================================= -->

	<target name="style" depends="prepare" description="Runs checkstyle">
		<taskdef resource="checkstyletask.properties" classpath="${checkstyle-all.jar}" />
		<checkstyle config="${src.dir}\checkstyle-config.xml">
			<property key="checkstyle.header.file" file="${src.dir}\copyright-header.txt" />
			<fileset dir="${src.classes.dir}">
				<include name="**/*.java" />
			</fileset>
			<fileset dir="${src.excel.dir}">
				<include name="**/*.java" />
			</fileset>
			<fileset dir="${src.test.dir}">
				<include name="**/*.java" />
			</fileset>
			<fileset dir="${src.examples.dir}">
				<include name="**/*.java" />
			</fileset>
		</checkstyle>
	</target>

	<!-- ================================================================= -->
	<!-- dist:                                                             -->
	<!-- Package distribution version                                      -->
	<!-- ================================================================= -->

	<target name="dist" depends="clean,doc,javadoc,test,style" description="Builds distribution">
		<echo>Bundling dist: ${dist.version.long}</echo>
		<property name="dist.name" value="${name}-${dist.version}" />
		<property name="dist.file" value="${dist.dir}/${dist.name}" />

		<property name="dist.tmp.dir" value="${dist.dir}/tmp" />
		<property name="dist.staging.dir" value="${dist.tmp.dir}/${dist.name}" />

		<!-- binary -->
		<delete dir="${dist.tmp.dir}" />
		<mkdir dir="${dist.staging.dir}" />
		<copy todir="${dist.staging.dir}">
			<fileset dir="${basedir}">
				<include name="bin/*" />
				<include name="lib/java2html.*" />
				<include name="build/jcite.jar" />
				<include name="*.html" />
				<include name="doc/**" />
				<exclude name="**/.DS_Store" />
			</fileset>
		</copy>
		<copy todir="${dist.staging.dir}" overwrite="yes">
			<filterset>
				<filter token="dist.version" value="${dist.version}" />
				<filter token="dist.version.long" value="${dist.version.long}" />
			</filterset>
			<fileset dir="${basedir}" includes="README.html" />
		</copy>
		<tar basedir="${dist.tmp.dir}" destfile="${dist.file}-bin.tar.gz" compression="gzip" longfile="gnu" />
		<zip basedir="${dist.tmp.dir}" destfile="${dist.file}-bin.zip" filesonly="no" />

		<!-- binary excel -->
		<delete dir="${dist.tmp.dir}" />
		<mkdir dir="${dist.staging.dir}" />
		<copy todir="${dist.staging.dir}">
			<fileset dir="${basedir}">
				<include name="lib/jxl.*" />
				<include name="build/jcite-excel.jar" />
				<include name="*.html" />
				<exclude name="**/.DS_Store" />
			</fileset>
		</copy>
		<copy todir="${dist.staging.dir}" overwrite="yes">
			<filterset>
				<filter token="dist.version" value="${dist.version}" />
				<filter token="dist.version.long" value="${dist.version.long}" />
			</filterset>
			<fileset dir="${basedir}" includes="README.html" />
		</copy>
		<tar basedir="${dist.tmp.dir}" destfile="${dist.file}-excel-bin.tar.gz" compression="gzip" longfile="gnu" />
		<zip basedir="${dist.tmp.dir}" destfile="${dist.file}-excel-bin.zip" filesonly="no" />

		<!-- source -->
		<delete dir="${dist.tmp.dir}" />
		<mkdir dir="${dist.staging.dir}" />
		<copy todir="${dist.staging.dir}">
			<fileset dir="${basedir}">
				<include name="*.html" />
				<include name="src/**" />
				<include name="build.xml" />
				<exclude name="**/.DS_Store" />
			</fileset>
		</copy>
		<copy todir="${dist.staging.dir}" overwrite="yes">
			<filterset>
				<filter token="dist.version" value="${dist.version}" />
				<filter token="dist.version.long" value="${dist.version.long}" />
			</filterset>
			<fileset dir="${basedir}" includes="README.html" />
		</copy>
		<tar basedir="${dist.tmp.dir}" destfile="${dist.file}-src.tar.gz" compression="gzip" longfile="gnu" />
		<zip basedir="${dist.tmp.dir}" destfile="${dist.file}-src.zip" filesonly="no" />

		<delete dir="${dist.tmp.dir}" />
	</target>

</project>
