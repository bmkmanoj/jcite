
h1. Running JCite

JCite can be run either "stand-alone":#standalone, or as an "Ant task":#ant. In both cases, it recognizes the following command-line arguments.

dt. @--input <file/pattern>@ / @-i <file/pattern>@ : specifies the input file(s) JCite should process. This is typically the name of an HTML file. If it is a pattern containing wildcard characters (@*@ and @?@), then all files matching the pattern are processed. You can specify the @-i@ option multiple times if you must specify more than one path. (Note: Mimicking Unix shells, @java.exe@ "expands the wildcards":http://www.thescripts.com/forum/thread16647.html before passing them to the @main@ function unless you enclose the pattern in double quotes.)

dt. @--output <file/folder>@ / @-o <file/folder>@ : specifies the output file or folder that JCite should write to. For a single input file, this must be the name of the output file. It can be the same file as the input file. If the input is a file pattern, then this must be an output folder.

dt. @--recursive@ / @-r@ : specifies that JCite should recursively descend into subfolders of the input pattern.

dt. @--source-path <path>@ / @-sp <path>@ : specifies a Java source path to search when looking for source files to cite from. You can specify the @-sp@ option multiple times if you must specify more than one path.

dt. @--tripwire-path <dbpath>@ / @-tw <dbpath>@ : Maintains the "tripwire database":-trip in the given path as a folder of small files.

dt. @--tripwire-file <dbfile>@ / @-twf <dbfile>@ : Maintains the "tripwire database":-trip in the given file.

dt. @--accept-changes@ / @-ac@ : Accepts changed citations and updates the tripwire database accordingly.

dt. @--diff-path <path>@ / @-dp <path>@ : Emits both the old and new version of citations for tripwire trip-ups to the given path. Use this to run a diff against them. But see below for how to automate this.

dt. @--differ <command>@ : Runs the given command with the two citation versions (as files) causing a trip-up. So, on Linux, you might use @--differ /usr/bin/diff@.  

dt. @--quiet@ / @-q@ : Run quietly, i.e. don't print header information.

dt. @--verbose@ / @-v@ : Verbose, i.e. give detailed information about citations processed.

dt. @-tt@ : emits HTML @TT@ tags instead of @PRE@ tags around the Java source fragments. Use this to have automatic line wrapping.


h2. <a name="standalone">Command Line</a>

Run JCite from the command line as follows (put everything on one line).

h5. Single File

	java
	  -cp /path/to/jcite/build/jcite.jar;/path/to/jcite/lib/java2html.jar
	  ch.arrenbrecht.jcite.JCite
	  -sp ../test
	  -i samples.html
	  -o samples.html

h5. Multiple Files

	java
	  -cp /path/to/jcite/build/jcite.jar;/path/to/jcite/lib/java2html.jar
	  ch.arrenbrecht.jcite.JCite
	  -sp ../test
	  -i "in/*.html"
	  -o out

Note the double quotes around the pattern, @"in/*.html"@, to prevent @java.exe@ from expanding them itself.

h5. Excel Support

If you want to be able to "cite Excel sheets":excel.htm, you need to add

	/path/to/jcite/build/jcite-excel.jar;/path/to/jcite/lib/jxl.jar
	
to the classpath.


h2. <a name="ant">Ant Task</a>

To run JCite 1.0 from within Ant, you can either use Ant's Java task, or the proper Ant task for JCite. Here's how to use the Java task:

<pre><code
><java classname="ch.arrenbrecht.jcite.JCite" classpath="${run.classpath}" failonerror="yes">
  <arg value="-sp" />
  <arg path="${src.test.dir}" />
  <arg value="-i" />
  <arg file="${src.doc.dir}/samples.html" />
  <arg value="-o" />
  <arg file="${doc.dir}/samples.html" />
</java>
</code></pre>

The proper Ant task works like this (excerpt from JCite's own @build.xml@):

<pre><code
><taskdef name="jcite" classname="ch.arrenbrecht.jcite.JCiteTask" classpathref="run.classpath" />
<jcite srcdir="${build.doc.dir}" destdir="${doc.dir}">
  <sourcepath>
    <pathelement location="${src.examples.dir}" />
    <pathelement location="${src.test.dir}" />
    <pathelement location="${src.test.dir}/data" />
  </sourcepath>
  <include name="**/*.htm*" />
</jcite>
</code></pre>

We have the following mapping to the ordinary parameters:

dt. @srcDir@ : replaces @--input@, together with the embedded @<include...>@ directives. The @--recursive@ option is not supported as you can instead use Ant's @**/*@ notation.

dt. @destDir@ : replaces @--output@.

dt. @sourcePath@ : replaces @--sourcepath@.

dt. @tripwirePath@ : replaces @--tripwire-path@.  

dt. @tripwireFile@ : replaces @--tripwire-file@.

dt. @acceptChanges@ : replaces @--accept-changes@.

dt. @diffPath@ : replaces @--diff-path@.

dt. @differ@ : same as @--differ@.

dt. @usePRE@ : opposite of @-tt@.

dt. @verbose@ : same as @--verbose@.  


[-trip]tripwire.htm
